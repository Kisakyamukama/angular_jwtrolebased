{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-interceptor.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login-info.ts","webpack:///./src/app/auth/observationslip-info.ts","webpack:///./src/app/auth/signup-info.ts","webpack:///./src/app/auth/token-storage.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/observationslipform/observationslipform.component.css","webpack:///./src/app/observationslipform/observationslipform.component.html","webpack:///./src/app/observationslipform/observationslipform.component.ts","webpack:///./src/app/pm/pm.component.css","webpack:///./src/app/pm/pm.component.html","webpack:///./src/app/pm/pm.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h4>Content from Server</h4>\\n<div *ngIf=\\\"userInfo\\\">\\n    <p>Name: <strong>{{userInfo.name}}</strong></p>\\n    <p>Email: <strong>{{userInfo.email}}</strong></p>\\n      \\n\\n</div>\\n{{board}}\\n{{errorMessage}}\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  userInfo: any;\n  board: string;\n  errorMessage: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getAdminBoard().subscribe(\n      data => {\n        console.log(data)\n        this.userInfo = {\n          name: data.user.name,\n          email: data.user.email\n        };\n        this.board = data.description;\n      },\n      error => {\n        this.errorMessage = `${error.status}: ${error.error}`;\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { UserComponent } from './user/user.component';\nimport { PmComponent } from './pm/pm.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { ObservationslipformComponent } from './observationslipform/observationslipform.component';\n\nconst routes: Routes = [\n    {\n        path: 'home',\n        component: HomeComponent\n    },\n    {\n        path: 'user',\n        component: UserComponent\n    },\n    {\n        path: 'pm',\n        component: PmComponent\n    },\n    {\n        path: 'admin',\n        component: AdminComponent\n    },\n    {\n        path: 'auth/login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: RegisterComponent\n    },\n    {\n        path: 'add-observationslip',\n        component: ObservationslipformComponent\n\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full'\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">WDR Desktop App</a>\\n    </div>\\n\\n    <ul class=\\\"nav navbar-nav\\\" routerLinkActive=\\\"acctive\\\">\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"home\\\">Home</a></li>\\n      <li *ngIf=\\\"authority === 'user'\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"user\\\">User Board</a>\\n        <a class=\\\"nav-link\\\" routerLink=\\\"add-observationslip\\\">Add Observationslip</a>\\n        <a class=\\\"nav-link\\\" routerLink=\\\"observationslips\\\">View Observationslip</a>\\n      </li>\\n      <li *ngIf=\\\"authority === 'admin'\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"admin\\\">OC Board</a>\\n      </li>\\n\\n      <li *ngIf=\\\"authority === 'pm'\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"pm\\\">PM Board</a>\\n      </li>\\n      <li *ngIf=\\\"!authority\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"auth/login\\\">Login</a>\\n      </li>\\n    </ul>\\n\\n  </div>\\n</nav>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './auth/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  private roles: string[];\n  public authority: string;\n\n  constructor(private tokenStorage: TokenStorageService) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.roles = this.tokenStorage.getAuthorities();\n      console.log(this.roles);\n      this.roles.every(role => {\n        console.log(role);\n        if (role === 'ROLE_OC') {\n          this.authority = 'admin';\n          return false;\n        } else if (role === 'ROLE_PM') {\n          this.authority = 'pm';\n          return false;\n        }\n        this.authority = 'user';\n        return true;\n      });\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserComponent } from './user/user.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { PmComponent } from './pm/pm.component';\n\nimport { httpInterceptorProviders } from './auth/auth-interceptor';\nimport { ObservationslipformComponent } from './observationslipform/observationslipform.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UserComponent,\n    RegisterComponent,\n    HomeComponent,\n    AdminComponent,\n    PmComponent,\n    ObservationslipformComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n\n  ],\n  providers: [httpInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from './token-storage.service';\n\nconst TOKEN_HEADER_KEY = 'x-access-token';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private token: TokenStorageService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        let authReq = req;\n        const token = this.token.getToken();\n        if (token != null) {\n            authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\n        }\n        return next.handle(authReq);\n    }\n}\n\nexport const httpInterceptorProviders = [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { JwtResponse } from './jwt-response';\nimport { AuthLoginInfo } from './login-info';\nimport { SignUpInfo } from './signup-info';\nimport { ObservationslipInfo } from './observationslip-info';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private loginUrl = 'http://localhost:8080/api/auth/signin';\n  private signupUrl = 'http://localhost:8080/api/auth/signup';\n  private observationslipUrl = 'http://localhost:8080/api/auth/storeObservationslip';\n\n  constructor(private http: HttpClient) {\n  }\n\n  attemptAuth(credentials: AuthLoginInfo): Observable<JwtResponse> {\n    return this.http.post<JwtResponse>(this.loginUrl, credentials, httpOptions);\n  }\n\n  signUp(info: SignUpInfo): Observable<string> {\n    return this.http.post<string>(this.signupUrl, info, httpOptions);\n  }\n\n  storeObservationslip (info: ObservationslipInfo): Observable<string> {\n    return this.http.post<string>(this.observationslipUrl, info, httpOptions);\n  }\n}\n","export class AuthLoginInfo {\n    username: string;\n    password: string;\n\n    constructor(username: string, password: string) {\n        this.username = username;\n        this.password = password;\n    }\n}\n","export class ObservationslipInfo{\n  Time: string;\n  Date: string;\n  Station: number;\n  stationName: string;\n  TotalAmountOfAllClouds: number;\n  TotalAmountOfLowClouds: number;\n  TypeOfLowClouds1: number;\n  OktasOfLowClouds1: number;\n  HeightOfLowClouds1: number;\n  CLCODEOfLowClouds1: string;\n  TypeOfLowClouds2: number;\n  OktasOfLowClouds2: number;\n  HeightOfLowClouds2: number;\n  CLCODEOfLowClouds2: string;\n  TypeOfLowClouds3: number;\n  OktasOfLowClouds3: number;\n  HeightOfLowClouds3: number;\n  CLCODEOfLowClouds3: string;\n  TypeOfMediumClouds1: number;\n  OktasOfMediumClouds1: number;\n  HeightOfMediumClouds1: number;\n  CLCODEOfMediumClouds1: string;\n  TypeOfMediumClouds2: number;\n  OktasOfMediumClouds2: number;\n  HeightOfMediumClouds2: number;\n  CLCODEOfMediumClouds2: string;\n  TypeOfMediumClouds3: number;\n  OktasOfMediumClouds3: number;\n  HeightOfMediumClouds3: number;\n  CLCODEOfMediumClouds3: string;\n  TypeOfHighClouds1: number;\n  OktasOfHighClouds1: number;\n  HeightOfHighClouds1: number;\n  CLCODEOfHighClouds1: string;\n  TypeOfHighClouds2: number;\n  OktasOfHighClouds2: number;\n  HeightOfHighClouds2: number;\n  CLCODEOfHighClouds2: string;\n  TypeOfHighClouds3: number;\n  OktasOfHighClouds3: number;\n  HeightOfHighClouds3: number;\n  CLCODEOfHighClouds3: string;\n  CloudSearchLightReading: number;\n  Rainfall: string;\n  Dry_Bulb: string;\n  Wet_Bulb: string;\n  Max_Read: number;\n  Max_Reset: number;\n  Min_Read: number;\n  Min_Reset: number;\n  Piche_Read: number;\n  Piche_Reset: number;\n  TimeMarksThermo: number;\n  TimeMarksHygro: number;\n  TimeMarksRainRec: number;\n  Present_Weather: string;\n  Present_WeatherCode: string;\n  Past_Weather: string;\n  Visibility: number;\n  Wind_Direction: string;\n  Wind_Speed: string;\n  Gusting: number;\n  AttdThermo: number;\n  PrAsRead: number;\n  Correction: number;\n  CLP: string;\n  MSLPr: number;\n  TimeMarksBarograph: number;\n  TimeMarksAnemograph: number;\n  OtherTMarks: string;\n  SoilMoisture: string;\n  SoilTemperature: string;\n  sunduration: string;\n  trend: string;\n  windrun: string;\n  speciOrMetar: string;\n  UnitOfWindSpeed: string;\n  IndOrOmissionOfPrecipitation: string;\n  TypeOfStation_Present_Past_Weather: string;\n  HeightOfLowestCloud: string;\n  StandardIsobaricSurface: string;\n  GPM: string;\n  DurationOfPeriodOfPrecipitation: string;\n  GrassMinTemp: string;\n  CI_OfPrecipitation: string;\n  BE_OfPrecipitation: string;\n  IndicatorOfTypeOfIntrumentation: string;\n  SignOfPressureChange: string;\n  Supp_Info: string;\n  VapourPressure: string;\n  T_H_Graph: string;\n  DeviceType: string;\n  SubmittedBy: string;\n  Remarks: string;\n  Approved: number;\n\n    constructor(\n      Time: string,\n      Date: string,\n      Station: number,\n      stationName: string,\n      TotalAmountOfAllClouds: number,\n      TotalAmountOfLowClouds: number,\n      TypeOfLowClouds1: number,\n      OktasOfLowClouds1: number,\n      HeightOfLowClouds1: number,\n      CLCODEOfLowClouds1: string,\n      TypeOfLowClouds2: number,\n      OktasOfLowClouds2: number,\n      HeightOfLowClouds2: number,\n      CLCODEOfLowClouds2: string,\n      TypeOfLowClouds3: number,\n      OktasOfLowClouds3: number,\n      HeightOfLowClouds3: number,\n      CLCODEOfLowClouds3: string,\n      TypeOfMediumClouds1: number,\n      OktasOfMediumClouds1: number,\n      HeightOfMediumClouds1: number,\n      CLCODEOfMediumClouds1: string,\n      TypeOfMediumClouds2: number,\n      OktasOfMediumClouds2: number,\n      HeightOfMediumClouds2: number,\n      CLCODEOfMediumClouds2: string,\n      TypeOfMediumClouds3: number,\n      OktasOfMediumClouds3: number,\n      HeightOfMediumClouds3: number,\n      CLCODEOfMediumClouds3: string,\n      TypeOfHighClouds1: number,\n      OktasOfHighClouds1: number,\n      HeightOfHighClouds1: number,\n      CLCODEOfHighClouds1: string,\n      TypeOfHighClouds2: number,\n      OktasOfHighClouds2: number,\n      HeightOfHighClouds2: number,\n      CLCODEOfHighClouds2: string,\n      TypeOfHighClouds3: number,\n      OktasOfHighClouds3: number,\n      HeightOfHighClouds3: number,\n      CLCODEOfHighClouds3: string,\n      CloudSearchLightReading: number,\n      Rainfall: string,\n      Dry_Bulb: string,\n      Wet_Bulb: string,\n      Max_Read: number,\n      Max_Reset: number,\n      Min_Read: number,\n      Min_Reset: number,\n      Piche_Read: number,\n      Piche_Reset: number,\n      TimeMarksThermo: number,\n      TimeMarksHygro: number,\n      TimeMarksRainRec: number,\n      Present_Weather: string,\n      Present_WeatherCode: string,\n      Past_Weather: string,\n      Visibility: number,\n      Wind_Direction: string,\n      Wind_Speed: string,\n      Gusting: number,\n      AttdThermo: number,\n      PrAsRead: number,\n      Correction: number,\n      CLP: string,\n      MSLPr: number,\n      TimeMarksBarograph: number,\n      TimeMarksAnemograph: number,\n      OtherTMarks: string,\n      SoilMoisture: string,\n      SoilTemperature: string,\n      sunduration: string,\n      trend: string,\n      windrun: string,\n      speciOrMetar: string,\n      UnitOfWindSpeed: string,\n      IndOrOmissionOfPrecipitation: string,\n      TypeOfStation_Present_Past_Weather: string,\n      HeightOfLowestCloud: string,\n      StandardIsobaricSurface: string,\n      GPM: string,\n      DurationOfPeriodOfPrecipitation: string,\n      GrassMinTemp: string,\n      CI_OfPrecipitation: string,\n      BE_OfPrecipitation: string,\n      IndicatorOfTypeOfIntrumentation: string,\n      SignOfPressureChange: string,\n      Supp_Info: string,\n      VapourPressure: string,\n      T_H_Graph: string,\n      DeviceType: string,\n      SubmittedBy: string,\n      Remarks: string,\n      Approved: number\n    ) {\n\n  this.Time=  Time;\n  this.Date=  Date;\n  this.Station=  Station;\n  this.stationName= stationName;\n  this.TotalAmountOfAllClouds= TotalAmountOfAllClouds;\n  this.TotalAmountOfLowClouds= TotalAmountOfLowClouds;\n  this.TypeOfLowClouds1= TypeOfLowClouds1;\n  this.OktasOfLowClouds1= OktasOfLowClouds1;\n  this.HeightOfLowClouds1= HeightOfLowClouds1;\n  this.CLCODEOfLowClouds1= CLCODEOfLowClouds1;\n  this.TypeOfLowClouds2= TypeOfLowClouds2;\n  this.OktasOfLowClouds2= OktasOfHighClouds2;\n  this.HeightOfLowClouds2= HeightOfLowClouds2;\n  this.CLCODEOfLowClouds2= CLCODEOfLowClouds2;\n  this.TypeOfLowClouds3= TypeOfLowClouds3;\n  this.OktasOfLowClouds3= OktasOfLowClouds3;\n  this.HeightOfLowClouds3=  HeightOfLowClouds3;\n  this.CLCODEOfLowClouds3= CLCODEOfLowClouds3;\n  this.TypeOfMediumClouds1= TypeOfMediumClouds1;\n  this.OktasOfMediumClouds1= OktasOfMediumClouds1;\n  this.HeightOfMediumClouds1= HeightOfMediumClouds1;\n  this.CLCODEOfMediumClouds1= CLCODEOfMediumClouds1;\n  this.TypeOfMediumClouds2= TypeOfMediumClouds2;\n  this.OktasOfMediumClouds2= OktasOfMediumClouds2 ;\n  this.HeightOfMediumClouds2= HeightOfMediumClouds2;\n  this.CLCODEOfMediumClouds2= CLCODEOfMediumClouds2 ;\n  this.TypeOfMediumClouds3=  TypeOfMediumClouds3;\n  this.OktasOfMediumClouds3= OktasOfMediumClouds3;\n  this.HeightOfMediumClouds3= HeightOfMediumClouds3;\n  this.CLCODEOfMediumClouds3= CLCODEOfMediumClouds3;\n  this.TypeOfHighClouds1= TypeOfHighClouds1;\n  this.OktasOfHighClouds1= OktasOfHighClouds1;\n  this.HeightOfHighClouds1= HeightOfHighClouds1;\n  this.CLCODEOfHighClouds1= CLCODEOfHighClouds1;\n  this.TypeOfHighClouds2= TypeOfHighClouds2;\n  this.OktasOfHighClouds2= OktasOfHighClouds2;\n  this.HeightOfHighClouds2= HeightOfHighClouds2;\n  this.CLCODEOfHighClouds2= CLCODEOfHighClouds2;\n  this.TypeOfHighClouds3= TypeOfHighClouds3;\n  this.OktasOfHighClouds3= OktasOfHighClouds3;\n  this.HeightOfHighClouds3= HeightOfHighClouds3;\n  this.CLCODEOfHighClouds3= CLCODEOfHighClouds3;\n  this.CloudSearchLightReading= CloudSearchLightReading;\n  this.Rainfall= Rainfall;\n  this.Dry_Bulb= Dry_Bulb;\n  this.Wet_Bulb= Wet_Bulb;\n  this.Max_Read= Max_Read;\n  this.Max_Reset= Max_Reset;\n  this.Min_Read= Min_Read ;\n  this.Min_Reset= Min_Reset;\n  this.Piche_Read= Piche_Read;\n  this.Piche_Reset= Piche_Reset;\n  this.TimeMarksThermo= TimeMarksThermo;\n  this.TimeMarksHygro= TimeMarksHygro;\n  this.TimeMarksRainRec= TimeMarksRainRec;\n  this.Present_Weather=  Present_Weather;\n  this.Present_WeatherCode= Present_WeatherCode;\n  this.Past_Weather=  Past_Weather;\n  this.Visibility=  Visibility;\n  this.Wind_Direction=  Wind_Direction;\n  this.Wind_Speed=  Wind_Speed;\n  this.Gusting=  Gusting;\n  this.AttdThermo= AttdThermo;\n  this.PrAsRead= PrAsRead;\n  this.Correction= Correction;\n  this.CLP= CLP;\n  this.MSLPr= MSLPr;\n  this.TimeMarksBarograph= TimeMarksBarograph;\n  this.TimeMarksAnemograph= TimeMarksAnemograph;\n  this.OtherTMarks= OtherTMarks;\n  this.SoilMoisture= SoilMoisture;\n  this.SoilTemperature= SoilTemperature;\n  this.sunduration= sunduration;\n  this.trend= trend;\n  this.windrun= windrun;\n  this.speciOrMetar= speciOrMetar;\n  this.UnitOfWindSpeed= UnitOfWindSpeed;\n  this.IndOrOmissionOfPrecipitation= IndOrOmissionOfPrecipitation;\n  this.TypeOfStation_Present_Past_Weather= TypeOfStation_Present_Past_Weather;\n  this.HeightOfLowestCloud= HeightOfLowestCloud;\n  this.StandardIsobaricSurface= StandardIsobaricSurface;\n  this.GPM= GPM;\n  this.DurationOfPeriodOfPrecipitation= DurationOfPeriodOfPrecipitation;\n  this.GrassMinTemp= GrassMinTemp ;\n  this.CI_OfPrecipitation= CI_OfPrecipitation;\n  this.BE_OfPrecipitation= BE_OfPrecipitation;\n  this.IndicatorOfTypeOfIntrumentation= IndicatorOfTypeOfIntrumentation;\n  this.SignOfPressureChange= SignOfPressureChange;\n  this.Supp_Info=  Supp_Info;\n  this.VapourPressure= VapourPressure;\n  this.T_H_Graph= T_H_Graph;\n  this.DeviceType= 'desktop' ;\n  this.SubmittedBy= SubmittedBy;\n  this.Remarks= Remarks;\n  this.Approved = Approved;\n    }\n  }\n  ","export class SignUpInfo {\n    name: string;\n    username: string;\n    email: string;\n    roles: string[];\n    password: string;\n\n    constructor(name: string, username: string, email: string, password: string, roles: string) {\n        this.name = name;\n        this.username = username;\n        this.email = email;\n        this.password = password;\n        this.roles = [roles] ;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'AuthToken';\nconst USERNAME_KEY = 'AuthUsername';\nconst AUTHORITIES_KEY = 'AuthAuthorities';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  private roles: Array<string> = [];\n  constructor() { }\n\n  signOut() {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUsername(username: string) {\n    window.sessionStorage.removeItem(USERNAME_KEY);\n    window.sessionStorage.setItem(USERNAME_KEY, username);\n  }\n\n  public getUsername(): string {\n    return sessionStorage.getItem(USERNAME_KEY);\n  }\n\n  public saveAuthorities(authorities: string[]) {\n    window.sessionStorage.removeItem(AUTHORITIES_KEY);\n    window.sessionStorage.setItem(AUTHORITIES_KEY, JSON.stringify(authorities));\n  }\n\n  public getAuthorities(): string[] {\n    this.roles = [];\n\n    if (sessionStorage.getItem(TOKEN_KEY)) {\n      JSON.parse(sessionStorage.getItem(AUTHORITIES_KEY)).forEach(authority => {\n        this.roles.push(authority);\n      });\n    }\n\n    return this.roles;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"info.token; else loggedOut\\\">\\n  <h5 class=\\\"text-primary\\\">Your Information</h5>\\n  <p>\\n    <strong>Username:</strong> {{info.username}}<br/>\\n    <strong>Roles:</strong> {{info.authorities}}<br />\\n    <strong>Token:</strong> {{info.token}}.\\n  </p>\\n  <button class=\\\"btn btn-secondary\\\" (click)=\\\"logout()\\\">Logout</button>\\n</div>\\n\\n<ng-template #loggedOut>\\n  Please login.\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\n\nimport { TokenStorageService } from '../auth/token-storage.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  info: any;\n\n  constructor(private token: TokenStorageService) { }\n\n  ngOnInit() {\n    this.info = {\n      token: this.token.getToken(),\n      username: this.token.getUsername(),\n      authorities: this.token.getAuthorities()\n    };\n  }\n\n  logout() {\n    this.token.signOut();\n    window.location.reload();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"isLoggedIn; else loggedOut\\\">\\n  Logged in as {{roles}}.\\n</div>\\n\\n<ng-template #loggedOut>\\n  <div class=\\\"row col-sm-6\\\" style=\\\"max-width:350px;\\\">\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" #username=\\\"ngModel\\\"\\n          required />\\n        <div *ngIf=\\\"f.submitted && username.invalid\\\">\\n          <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" #password=\\\"ngModel\\\"\\n          required minlength=\\\"6\\\" />\\n        <div *ngIf=\\\"f.submitted && password.invalid\\\">\\n          <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n          <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\">Login</button>\\n        <div *ngIf=\\\"f.submitted && isLoginFailed\\\" class=\\\"alert alert-danger\\\">\\n          Login failed: {{errorMessage}}\\n        </div>\\n      </div>\\n    </form>\\n    <hr />\\n    <p>Don't have an account?</p>\\n    <a href=\\\"signup\\\" class=\\\"btn btn-success\\\">Sign Up</a>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../auth/auth.service';\nimport { TokenStorageService } from '../auth/token-storage.service';\nimport { AuthLoginInfo } from '../auth/login-info';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n  private loginInfo: AuthLoginInfo;\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getAuthorities();\n    }\n  }\n\n  onSubmit() {\n    console.log(this.form);\n\n    this.loginInfo = new AuthLoginInfo(\n      this.form.username,\n      this.form.password);\n\n    this.authService.attemptAuth(this.loginInfo).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUsername(data.username);\n        this.tokenStorage.saveAuthorities(data.authorities);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getAuthorities();\n        this.reloadPage();\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.reason;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage() {\n    window.location.reload();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29ic2VydmF0aW9uc2xpcGZvcm0vb2JzZXJ2YXRpb25zbGlwZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"submitted; else observationslipForm\\\">\\n  Observationslip form data added is successfully!\\n</div>\\n<ng-template #observationslipForm>\\n        <aside class=\\\"right-side\\\" xmlns=\\\"\\\" xmlns=\\\"\\\">\\n          <section class=\\\"content-header\\\">\\n              <h1>\\n                  Observation/Raw Data\\n              </h1>            \\n          </section>\\n\\n           <!-- Main content -->\\n        <section>\\n\\n        <div class=\\\"row\\\">\\n             <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" n>\\n                      <table>\\n                        <tr>\\n                      <td colspan = \\\"4\\\">\\n                          <div class=\\\"input-group\\\">\\n                              <span class=\\\"input-group-addon\\\">Station Name</span>\\n                              <input type=\\\"text\\\" name=\\\"stationName\\\" [(ngModel)]=\\\"form.stationName\\\"   class=\\\"form-control\\\" #stationName=\\\"ngModel\\\"  readonly class=\\\"form-control\\\" >\\n\\n                            </div>\\n                      </td>\\n\\n                      <td colspan = \\\"4\\\">\\n                          <div class=\\\"input-group\\\">\\n                              <span class=\\\"input-group-addon\\\"> Station Number</span>\\n                              <input type=\\\"number\\\" name=\\\"Station\\\" [(ngModel)]=\\\"form.Station\\\"   class=\\\"form-control\\\"  readonly class=\\\"form-control\\\" value=\\\"\\\" readonly=\\\"readonly\\\" >\\n                            </div>\\n                           </td>\\n                           <td colspan = \\\"4\\\">\\n\\n                              <div class=\\\"input-group\\\">\\n                                <span class=\\\"input-group-addon\\\">Select Date</span>\\n                                <input type=\\\"text\\\" name=\\\"date\\\"  [(ngModel)]=\\\"form.Date\\\"  class=\\\"form-control compulsory\\\" placeholder=\\\"Enter select date\\\" value=\\\"\\\" autocomplete='off'>\\n                              </div>\\n                          </td>\\n                    </tr>\\n\\n                    <tr>\\n                        <td colspan=\\\"6\\\">\\n                            <div class=\\\"input-group\\\"  >\\n                                <span class=\\\"input-group-addon\\\">Time category</span>\\n                                <select name=\\\"metar_speci\\\"  [(ngModel)]=\\\"form.speciOrMetar\\\"   class=\\\"form-control compulsory\\\">\\n                                  <option value=\\\"metar\\\">normal</option>\\n                                  <option value=\\\"speci\\\">speci</option>\\n\\n                                </select>\\n                              </div>\\n\\n                          </td>\\n                          <td colspan=\\\"6\\\">\\n\\n                              <div class=\\\"input-group\\\" id=\\\"metartimeId\\\"  >\\n                                  <span class=\\\"input-group-addon\\\">NORMAL TIME</span>\\n                                  <select name=\\\"Time\\\" [(ngModel)]=\\\"form.Time\\\"   class=\\\"form-control compulsory\\\">\\n                                    <option value=\\\"00:00Z\\\">00:00Z</option>\\n                                    <option value=\\\"00:30Z\\\">00:30Z</option>\\n                                    <option value=\\\"01:00Z\\\">01:00Z</option>\\n                                    <option value=\\\"01:30Z\\\">01:30Z</option>\\n                                    <option value=\\\"02:00Z\\\">02:00Z</option>\\n                                    <option value=\\\"02:30Z\\\">02:30Z</option>\\n                                    <option value=\\\"03:00Z\\\">03:00Z</option>\\n                                    <option value=\\\"03:30Z\\\">03:30Z</option>\\n                                    <option value=\\\"04:00Z\\\">04:00Z</option>\\n                                    <option value=\\\"04:30Z\\\">04:30Z</option>\\n                                    <option value=\\\"05:00Z\\\">05:00Z</option>\\n                                    <option value=\\\"05:30Z\\\">05:30Z</option>\\n                                    <option value=\\\"06:00Z\\\">06:00Z</option>\\n                                    <option value=\\\"06:30Z\\\">06:30Z</option>\\n                                    <option value=\\\"07:00Z\\\">07:00Z</option>\\n                                    <option value=\\\"07:30Z\\\">07:30Z</option>\\n                                    <option value=\\\"08:00Z\\\">08:00Z</option>\\n                                    <option value=\\\"08:30Z\\\">08:30Z</option>\\n                                    <option value=\\\"09:00Z\\\">09:00Z</option>\\n                                    <option value=\\\"09:30Z\\\">09:30Z</option>\\n                                    <option value=\\\"10:00Z\\\">10:00Z</option>\\n                                    <option value=\\\"10:30Z\\\">10:30Z</option>\\n                                    <option value=\\\"11:00Z\\\">11:00Z</option>\\n                                    <option value=\\\"11:30Z\\\">11:30Z</option>\\n                                    <option value=\\\"12:00Z\\\">12:00Z</option>\\n                                    <option value=\\\"12:30Z\\\">12:30Z</option>\\n                                    <option value=\\\"13:00Z\\\">13:00Z</option>\\n                                    <option value=\\\"13:30Z\\\">13:30Z</option>\\n                                    <option value=\\\"14:00Z\\\">14:00Z</option>\\n                                    <option value=\\\"14:30Z\\\">14:30Z</option>\\n                                    <option value=\\\"15:00Z\\\">15:00Z</option>\\n                                    <option value=\\\"15:30Z\\\">15:30Z</option>\\n                                    <option value=\\\"16:00Z\\\">16:00Z</option>\\n                                    <option value=\\\"16:30Z\\\">16:30Z</option>\\n                                    <option value=\\\"17:00Z\\\">17:00Z</option>\\n                                    <option value=\\\"17:30Z\\\">17:30Z</option>\\n                                    <option value=\\\"18:00Z\\\">18:00Z</option>\\n                                    <option value=\\\"18:30Z\\\">18:30Z</option>\\n                                    <option value=\\\"19:00Z\\\">19:00Z</option>\\n                                    <option value=\\\"19:30Z\\\">19:30Z</option>\\n                                    <option value=\\\"20:00Z\\\">20:00Z</option>\\n                                    <option value=\\\"20:30Z\\\">20:30Z</option>\\n                                    <option value=\\\"21:00Z\\\">21:00Z</option>\\n                                    <option value=\\\"21:30Z\\\">21:30Z</option>\\n                                    <option value=\\\"22:00Z\\\">22:00Z</option>\\n                                    <option value=\\\"22:30Z\\\">22:30Z</option>\\n                                    <option value=\\\"23:00Z\\\">23:00Z</option>\\n                                    <option value=\\\"23:30Z\\\">23:30Z</option>\\n                                  </select>\\n                                  <input type=\\\"hidden\\\" name=\\\"diff\\\" id=\\\"diff\\\" value=\\\"\\\"/>\\n                                </div>\\n\\n\\n                                  <div class=\\\"input-group\\\" id=\\\"specitimeId\\\"  style=\\\"display:none;\\\">\\n                                  <span class=\\\"input-group-addon\\\">SPECI TIME</span>\\n\\n                                    <div class=\\\"input-group bootstrap-timepicker timepicker\\\">\\n                                      <input id=\\\"timepicker1\\\" type=\\\"text\\\" name=\\\"speci_time_observationslipform\\\"  id=\\\"time_observationslipform\\\"  class=\\\"form-control compulsory\\\">\\n                                      <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-time\\\"></i></span>\\n                                    </div>\\n                                    <span ng-hide=\\\"Time\\\" class=\\\"validator\\\">Time  please</span>\\n\\n                                  <script type=\\\"text/javascript\\\">\\n                                              $('#timepicker1').timepicker();\\n                                          </script>\\n                                </div>\\n\\n\\n\\n                            </td>\\n                    </tr>\\n                    <tr>\\n                        <td colspan=\\\"6\\\">\\n\\n                            <div class=\\\"input-group\\\">\\n                              <span class=\\\"input-group-addon\\\">Total amount of all clouds</span>\\n                              <select name=\\\"TotalAmountOfAllClouds\\\" [(ngModel)]=\\\"form.TotalAmountOfAllClouds\\\"    onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\" Enter total amount of All clouds\\\" >\\n                                <option value=\\\"\\\">--Select Total Amount Of All Clouds </option>\\n                                <option value=\\\"0\\\">0</option>\\n                                <option value=\\\"1\\\">1</option>\\n                                <option value=\\\"2\\\">2</option>\\n                                <option value=\\\"3\\\">3</option>\\n                                <option value=\\\"4\\\">4</option>\\n                                <option value=\\\"5\\\">5</option>\\n                                <option value=\\\"6\\\">6</option>\\n                                <option value=\\\"7\\\">7</option>\\n                                <option value=\\\"8\\\">8</option>\\n                              </select>\\n                            </div>\\n                        </td>\\n                        <td colspan=\\\"6\\\">\\n\\n\\n                            <div class=\\\"input-group\\\">\\n                              <span class=\\\"input-group-addon\\\">Total amount of low clouds</span>\\n                              <select  name=\\\"TotalAmountOfLowClouds\\\" [(ngModel)]=\\\"form.TotalAmountOfLowClouds\\\" onkeyup=\\\"allowIntegerInputOnly(this)\\\"   class=\\\"form-control\\\"  placeholder=\\\"Enter total amount of Low clouds\\\" >\\n                                <option value=\\\"\\\">--Select Total Amount of Low Clouds </option>\\n                                <option value=\\\"0\\\">0</option>\\n                                <option value=\\\"1\\\">1</option>\\n                                <option value=\\\"2\\\">2</option>\\n                                <option value=\\\"3\\\">3</option>\\n                                <option value=\\\"4\\\">4</option>\\n                                <option value=\\\"5\\\">5</option>\\n                                <option value=\\\"6\\\">6</option>\\n                                <option value=\\\"7\\\">7</option>\\n                                <option value=\\\"8\\\">8</option>\\n\\n\\n                              </select>\\n                            </div>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td colspan = \\\"4\\\">\\n                          <b>Low</b>\\n                        </td>\\n                        <td colspan = \\\"4\\\">\\n                          <b>Medium</b>\\n                        </td>\\n                        <td colspan = \\\"4\\\">\\n                          <b>High</b>\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                          <td><b>type</b></td> <td><b>oktas</b></td> <td><b>height</b></td> <td><b>clcode</b></td> <td><b>type</b></td> <td><b>oktas</b></td>\\n                          <td><b>height</b></td> <td><b>clcode</b></td> <td><b>type</b></td> <td><b>oktas</b></td> <td><b>height</b></td> <td><b>clcode</b></td>\\n\\n                        </tr>\\n\\n                        <!-- Type 1 clouds -->\\n\\n                        <tr>\\n                            <td>\\n                            <select  name=\\\"TypeOfLowClouds1\\\"  [(ngModel)]=\\\"form.TypeOfLowClouds1\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter Type of LOW Cloud\\\" >\\n                            <option value=\\\"\\\"></option>\\n                            <option value=\\\"0\\\">0</option>\\n                            <option value=\\\"1\\\">1</option>\\n                            <option value=\\\"2\\\">2</option>\\n                            <option value=\\\"3\\\">3</option>\\n                            <option value=\\\"4\\\">4</option>\\n                            <option value=\\\"5\\\">5</option>\\n                            <option value=\\\"6\\\">6</option>\\n                            <option value=\\\"7\\\">7</option>\\n                            <option value=\\\"8\\\">8</option>\\n                            <option value=\\\"9\\\">9</option>\\n\\n                            </select>\\n                            </td>\\n\\n                            <td>\\n                              <select name=\\\"OktasOfLowClouds1\\\"  [(ngModel)]=\\\"form.OktasOfLowClouds1\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\" class=\\\"form-control\\\" placeholder=\\\"Enter OKTAS  for LOW CLOUD\\\" >\\n                              <option value=\\\"\\\"></option>\\n                              <option value=\\\"0\\\">0</option>\\n                              <option value=\\\"1\\\">1</option>\\n                              <option value=\\\"2\\\">2</option>\\n                              <option value=\\\"3\\\">3</option>\\n                              <option value=\\\"4\\\">4</option>\\n                              <option value=\\\"5\\\">5</option>\\n                              <option value=\\\"6\\\">6</option>\\n                              <option value=\\\"7\\\">7</option>\\n                              <option value=\\\"8\\\">8</option>\\n\\n\\n                            </select>\\n                            </td>\\n\\n                            <td>\\n                              <input type=\\\"text\\\" name=\\\"HeightOfLowClouds1\\\"   [(ngModel)]=\\\"form.HeightOfLowClouds1\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"0\\\" style = 'width:70px;'>\\n                            </td>\\n\\n                            <td>\\n                              <select  name=\\\"CLCODEOfLowClouds1\\\"   [(ngModel)]=\\\"form.CLCODEOfLowClouds1\\\"  onkeyup=\\\"allowCharactersInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" Enter CLCODE of  LOW CLOUD \\\" >\\n                              <option value=\\\"\\\"></option>\\n                              <option value=\\\"Sc\\\">Sc</option>\\n                              <option value=\\\"St\\\">St</option>\\n                              <option value=\\\"Cu\\\">Cu</option>\\n                              <option value=\\\"Cb\\\">Cb</option>\\n\\n                            </select>\\n                            </td>\\n\\n                            <td>\\n                              <select name=\\\"TypeOfLowClouds2\\\"   [(ngModel)]=\\\"form.TypeOfLowClouds2\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter TYPE OF MEDIUM CLOUD\\\" >\\n                              <option value=\\\"\\\"></option>\\n                              <option value=\\\"0\\\">0</option>\\n                              <option value=\\\"1\\\">1</option>\\n                              <option value=\\\"2\\\">2</option>\\n                              <option value=\\\"3\\\">3</option>\\n                              <option value=\\\"4\\\">4</option>\\n                              <option value=\\\"5\\\">5</option>\\n                              <option value=\\\"6\\\">6</option>\\n                              <option value=\\\"7\\\">7</option>\\n                              <option value=\\\"8\\\">8</option>\\n                              <option value=\\\"9\\\">9</option>\\n                              </select>\\n                            </td>\\n\\n                            <td>\\n                              <select name=\\\"OktasOfLowClouds2\\\"  [(ngModel)]=\\\"form.OktasOfLowClouds2\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter OKTAS  OF MEDIUM CLOUD\\\" >\\n                              <option value=\\\"\\\"> </option>\\n                              <option value=\\\"0\\\">0</option>\\n                              <option value=\\\"1\\\">1</option>\\n                              <option value=\\\"2\\\">2</option>\\n                              <option value=\\\"3\\\">3</option>\\n                              <option value=\\\"4\\\">4</option>\\n                              <option value=\\\"5\\\">5</option>\\n                              <option value=\\\"6\\\">6</option>\\n                              <option value=\\\"7\\\">7</option>\\n                              <option value=\\\"8\\\">8</option>\\n                              </select>\\n                            </td>\\n\\n                            <td>\\n                              <input type=\\\"text\\\" name=\\\"HeightOfLowClouds2\\\"   [(ngModel)]=\\\"form.HeightOfLowClouds2\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" 0 \\\" style = \\\"width:70px;\\\">\\n                            </td>\\n\\n                            <td>\\n                              <select name=\\\"CLCODEOfLowClouds2\\\"   [(ngModel)]=\\\"form.CLCODEOfLowClouds2\\\"  onkeyup=\\\"allowCharactersInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" Enter CL CODE MEDIUM CLOUD \\\" >\\n                              <option value=\\\"\\\"> </option>\\n                              <option value=\\\"Ac\\\">Ac</option>\\n                              <option value=\\\"As\\\">As</option>\\n                              <option value=\\\"Ns\\\">Ns</option>\\n                              </select>\\n                            </td>\\n                            <td>\\n                              <select name=\\\"TypeOfLowClouds3\\\"   [(ngModel)]=\\\"form.TypeOfLowClouds3\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter TYPE OF HIGH CLOUD\\\" >\\n                                <option value=\\\"\\\"> </option>\\n                                <option value=\\\"0\\\">0</option>\\n                                <option value=\\\"1\\\">1</option>\\n                                <option value=\\\"2\\\">2</option>\\n                                <option value=\\\"3\\\">3</option>\\n                                <option value=\\\"4\\\">4</option>\\n                                <option value=\\\"5\\\">5</option>\\n                                <option value=\\\"6\\\">6</option>\\n                                <option value=\\\"7\\\">7</option>\\n                                <option value=\\\"8\\\">8</option>\\n                                <option value=\\\"9\\\">9</option>\\n                              </select>\\n                            </td>\\n                            <td>\\n                               <select name=\\\"\\tOktasOfLowClouds3\\\"  [(ngModel)]=\\\"form.OktasOfLowClouds3\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter OKTAS OF HIGH CLOUD\\\" >\\n                                <option value=\\\"\\\"> </option>\\n                                <option value=\\\"0\\\">0</option>\\n                                <option value=\\\"1\\\">1</option>\\n                                <option value=\\\"2\\\">2</option>\\n                                <option value=\\\"3\\\">3</option>\\n                                <option value=\\\"4\\\">4</option>\\n                                <option value=\\\"5\\\">5</option>\\n                                <option value=\\\"6\\\">6</option>\\n                                <option value=\\\"7\\\">7</option>\\n                                <option value=\\\"8\\\">8</option>\\n                              </select>\\n                            </td>\\n                            <td>\\n                               <input type=\\\"text\\\" name=\\\"HeightOfLowClouds3\\\"   [(ngModel)]=\\\"form.HeightOfLowClouds3\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" 0 \\\" style = \\\"width:70px;\\\">\\n                            </td>\\n                            <td>\\n                              <select name=\\\"CLCODEOfLowClouds3\\\"   [(ngModel)]=\\\"form.CLCODEOfLowClouds3\\\"  onkeyup=\\\"allowCharactersInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" Enter CLCODE OF MEDIUM CLOUD \\\" >\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"Cl\\\">Cl</option>\\n                                <option value=\\\"Cc\\\">Cc</option>\\n                                <option value=\\\"Cs\\\">Cs</option>\\n\\n                              </select>\\n                            </td>\\n                          </tr>\\n\\n                          <!--  Type 2 clouds -->\\n\\n                          <tr>\\n                              <td>\\n                                <select  name=\\\"TypeOfMediumClouds1\\\"   [(ngModel)]=\\\"form.TypeOfMediumClouds1\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter Type of LOW CLOUD\\\" >\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"0\\\">0</option>\\n                                <option value=\\\"1\\\">1</option>\\n                                <option value=\\\"2\\\">2</option>\\n                                <option value=\\\"3\\\">3</option>\\n                                <option value=\\\"4\\\">4</option>\\n                                <option value=\\\"5\\\">5</option>\\n                                <option value=\\\"6\\\">6</option>\\n                                <option value=\\\"7\\\">7</option>\\n                                <option value=\\\"8\\\">8</option>\\n                                <option value=\\\"9\\\">9</option>\\n\\n                                </select>\\n                              </td>\\n\\n                              <td>\\n                                <select name=\\\"OktasOfMediumClouds1\\\"  [(ngModel)]=\\\"form.OktasOfMediumClouds1\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\" class=\\\"form-control\\\" placeholder=\\\"Enter OKTAS OF LOW CLOUD\\\" >\\n                                <option value=\\\"\\\"> </option>\\n                                <option value=\\\"0\\\">0</option>\\n                                <option value=\\\"1\\\">1</option>\\n                                <option value=\\\"2\\\">2</option>\\n                                <option value=\\\"3\\\">3</option>\\n                                <option value=\\\"4\\\">4</option>\\n                                <option value=\\\"5\\\">5</option>\\n                                <option value=\\\"6\\\">6</option>\\n                                <option value=\\\"7\\\">7</option>\\n                                <option value=\\\"8\\\">8</option>\\n                              </select>\\n                              </td>\\n\\n                              <td>\\n                                <input type=\\\"text\\\" name=\\\"HeightOfMediumClouds1\\\"  [(ngModel)]=\\\"form.HeightOfMediumClouds1\\\" onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"0\\\" style = \\\"width:70px;\\\">\\n\\n                              </td>\\n                              <td>\\n                                <select  name=\\\"CLCODEOfMediumClouds1\\\"  [(ngModel)]=\\\"form.CLCODEOfMediumClouds1\\\" onkeyup=\\\"allowCharactersInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" Enter CLCODE of LOW CLOUD \\\" >\\n                                <option value=\\\"\\\"> </option>\\n                                <option value=\\\"Sc\\\">Sc</option>\\n                                <option value=\\\"St\\\">St</option>\\n                                <option value=\\\"Cu\\\">Cu</option>\\n                                <option value=\\\"Cb\\\">Cb</option>\\n                              </select>\\n                              </td>\\n                              <td>\\n                                <select name=\\\"TypeOfMediumClouds2\\\"   [(ngModel)]=\\\"form.TypeOfMediumClouds2\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter TYPE OF MEDIUM CLOUD\\\" >\\n                                <option value=\\\"\\\"></option>\\n                                <option value=\\\"0\\\">0</option>\\n                                <option value=\\\"1\\\">1</option>\\n                                <option value=\\\"2\\\">2</option>\\n                                <option value=\\\"3\\\">3</option>\\n                                <option value=\\\"4\\\">4</option>\\n                                <option value=\\\"5\\\">5</option>\\n                                <option value=\\\"6\\\">6</option>\\n                                <option value=\\\"7\\\">7</option>\\n                                <option value=\\\"8\\\">8</option>\\n                                <option value=\\\"9\\\">9</option>\\n                                </select>\\n                              </td>\\n                              <td>\\n                                <select name=\\\"OktasOfMediumClouds2\\\"  [(ngModel)]=\\\"form.OktasOfMediumClouds2\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter OKTAS OF MEDIUM CLOUD\\\" >\\n                                <option value=\\\"\\\"> </option>\\n                                <option value=\\\"0\\\">0</option>\\n                                <option value=\\\"1\\\">1</option>\\n                                <option value=\\\"2\\\">2</option>\\n                                <option value=\\\"3\\\">3</option>\\n                                <option value=\\\"4\\\">4</option>\\n                                <option value=\\\"5\\\">5</option>\\n                                <option value=\\\"6\\\">6</option>\\n                                <option value=\\\"7\\\">7</option>\\n                                <option value=\\\"8\\\">8</option>\\n                                </select>\\n                              </td>\\n                              <td>\\n                                 <input type=\\\"text\\\" name=\\\"HeightOfMediumClouds2\\\"  [(ngModel)]=\\\"form.HeightOfMediumClouds2\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" 0 \\\"  style = \\\"width: 70px\\\">\\n                              </td>\\n                              <td>\\n                                 <select name=\\\"CLCODEOfMediumClouds2\\\"  [(ngModel)]=\\\"form.CLCODEOfMediumClouds2\\\"  onkeyup=\\\"allowCharactersInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" Enter CL CODE OF MEDIUM CLOUD \\\" >\\n                                <option value=\\\"\\\"> </option>\\n                                <option value=\\\"Ac\\\">Ac</option>\\n                                <option value=\\\"As\\\">As</option>\\n                                <option value=\\\"Ns\\\">Ns</option>\\n\\n\\n                                </select>\\n                              </td>\\n                              <td>\\n                                 <select name=\\\"TypeOfMediumClouds3\\\"  [(ngModel)]=\\\"form.TypeOfMediumClouds3\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter TYPE OF HIGH CLOUD\\\" >\\n                                  <option value=\\\"\\\"> </option>\\n                                  <option value=\\\"0\\\">0</option>\\n                                  <option value=\\\"1\\\">1</option>\\n                                  <option value=\\\"2\\\">2</option>\\n                                  <option value=\\\"3\\\">3</option>\\n                                  <option value=\\\"4\\\">4</option>\\n                                  <option value=\\\"5\\\">5</option>\\n                                  <option value=\\\"6\\\">6</option>\\n                                  <option value=\\\"7\\\">7</option>\\n                                  <option value=\\\"8\\\">8</option>\\n                                  <option value=\\\"9\\\">9</option>\\n                                </select>\\n                              </td>\\n                              <td>\\n                                 <select name=\\\"OktasOfMediumClouds3\\\"  [(ngModel)]=\\\"form.OktasOfMediumClouds3\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter OKTAS OF HIGH CLOUD\\\" >\\n                                  <option value=\\\"\\\"> </option>\\n                                  <option value=\\\"0\\\">0</option>\\n                                  <option value=\\\"1\\\">1</option>\\n                                  <option value=\\\"2\\\">2</option>\\n                                  <option value=\\\"3\\\">3</option>\\n                                  <option value=\\\"4\\\">4</option>\\n                                  <option value=\\\"5\\\">5</option>\\n                                  <option value=\\\"6\\\">6</option>\\n                                  <option value=\\\"7\\\">7</option>\\n                                  <option value=\\\"8\\\">8</option>\\n                                </select>\\n                              </td>\\n                              <td>\\n                                <input type=\\\"text\\\" name=\\\"HeightOfMediumClouds3\\\"  [(ngModel)]=\\\"form.HeightOfMediumClouds3\\\" onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" 0 \\\" style = \\\"width:70px;\\\">\\n                              </td>\\n                              <td>\\n                                 <select name=\\\"CLCODEOfMediumClouds3\\\"   [(ngModel)]=\\\"form.CLCODEOfMediumClouds3\\\"  onkeyup=\\\"allowCharactersInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" Enter CL CODE MEDIUM CLOUD \\\" >\\n                                  <option value=\\\"\\\"></option>\\n                                  <option value=\\\"Cl\\\">Cl</option>\\n                                  <option value=\\\"Cc\\\">Cc</option>\\n                                  <option value=\\\"Cs\\\">Cs</option>\\n                                </select>\\n                              </td>\\n                            </tr>\\n\\n                             <!-- Type 3 clouds -->\\n                             <tr>\\n                                <td>\\n                                  <select  name=\\\"TypeOfHighClouds1\\\"   [(ngModel)]=\\\"form.TypeOfHighClouds1\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter Type of low Cloud\\\" >\\n                                  <option value=\\\"\\\"></option>\\n                                  <option value=\\\"0\\\">0</option>\\n                                  <option value=\\\"1\\\">1</option>\\n                                  <option value=\\\"2\\\">2</option>\\n                                  <option value=\\\"3\\\">3</option>\\n                                  <option value=\\\"4\\\">4</option>\\n                                  <option value=\\\"5\\\">5</option>\\n                                  <option value=\\\"6\\\">6</option>\\n                                  <option value=\\\"7\\\">7</option>\\n                                  <option value=\\\"8\\\">8</option>\\n                                  <option value=\\\"9\\\">9</option>\\n\\n                                </select>\\n                                </td>\\n\\n                                <td>\\n                                  <select name=\\\"OktasOfHighClouds1\\\"  [(ngModel)]=\\\"form.OktasOfHighClouds1\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\" class=\\\"form-control\\\" placeholder=\\\"Enter OKTAS of LOW CLOUD\\\" >\\n                                  <option value=\\\"\\\"> </option>\\n                                  <option value=\\\"0\\\">0</option>\\n                                  <option value=\\\"1\\\">1</option>\\n                                  <option value=\\\"2\\\">2</option>\\n                                  <option value=\\\"3\\\">3</option>\\n                                  <option value=\\\"4\\\">4</option>\\n                                  <option value=\\\"5\\\">5</option>\\n                                  <option value=\\\"6\\\">6</option>\\n                                  <option value=\\\"7\\\">7</option>\\n                                  <option value=\\\"8\\\">8</option>\\n                                </select>\\n                                </td>\\n\\n                                <td>\\n                                  <input type=\\\"text\\\" name=\\\"HeightOfHighClouds1\\\"   [(ngModel)]=\\\"form.HeightOfHighClouds1\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" 0 \\\"  style = \\\"width: 70px;\\\">\\n                                </td>\\n\\n                                <td>\\n                                  <select  name=\\\"CLCODEOfHighClouds1\\\"   [(ngModel)]=\\\"form.CLCODEOfHighClouds1\\\"  onkeyup=\\\"allowCharactersInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" Enter CLCODE of LOW CLOUD \\\" >\\n                                  <option value=\\\"\\\"> </option>\\n                                  <option value=\\\"Sc\\\">Sc</option>\\n                                  <option value=\\\"St\\\">St</option>\\n                                  <option value=\\\"Cu\\\">Cu</option>\\n                                  <option value=\\\"Cb\\\">Cb</option>\\n\\n                                </select>\\n                                </td>\\n                                <td>\\n                                  <select name=\\\"TypeOfHighClouds2\\\"   [(ngModel)]=\\\"form.TypeOfHighClouds2\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter TYPE OF MEDIUM CLOUD\\\" >\\n                                  <option value=\\\"\\\"></option>\\n                                  <option value=\\\"0\\\">0</option>\\n                                  <option value=\\\"1\\\">1</option>\\n                                  <option value=\\\"2\\\">2</option>\\n                                  <option value=\\\"3\\\">3</option>\\n                                  <option value=\\\"4\\\">4</option>\\n                                  <option value=\\\"5\\\">5</option>\\n                                  <option value=\\\"6\\\">6</option>\\n                                  <option value=\\\"7\\\">7</option>\\n                                  <option value=\\\"8\\\">8</option>\\n                                  <option value=\\\"9\\\">9</option>\\n                                  </select>\\n                                </td>\\n                                <td>\\n                                  <select name=\\\"OktasOfHighClouds2\\\"  [(ngModel)]=\\\"form.OktasOfHighClouds2\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter OKTAS OF MEDIUM CLOUD\\\" >\\n                                  <option value=\\\"\\\"> </option>\\n                                  <option value=\\\"0\\\">0</option>\\n                                  <option value=\\\"1\\\">1</option>\\n                                  <option value=\\\"2\\\">2</option>\\n                                  <option value=\\\"3\\\">3</option>\\n                                  <option value=\\\"4\\\">4</option>\\n                                  <option value=\\\"5\\\">5</option>\\n                                  <option value=\\\"6\\\">6</option>\\n                                  <option value=\\\"7\\\">7</option>\\n                                  <option value=\\\"8\\\">8</option>\\n                                  </select>\\n                                </td>\\n                                <td>\\n                                   <input type=\\\"text\\\" name=\\\"HeightOfHighClouds2\\\"   [(ngModel)]=\\\"form.HeightOfHighClouds2\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" 0 \\\" style = \\\"width:70px;\\\">\\n                                </td>\\n                                <td>\\n                                   <select name=\\\"CLCODEOfHighClouds2\\\"  [(ngModel)]=\\\"form.CLCODEOfHighClouds2\\\"  onkeyup=\\\"allowCharactersInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" Enter CL CODE OF MEDIUM CLOUD \\\" >\\n                                     <option value=\\\"\\\"> </option>\\n                                    <option value=\\\"Ac\\\">Ac</option>\\n                                    <option value=\\\"As\\\">As</option>\\n                                    <option value=\\\"Ns\\\">Ns</option>\\n                                  </select>\\n                                </td>\\n                                <td>\\n                                   <select name=\\\"TypeOfHighClouds3\\\"   [(ngModel)]=\\\"form.TypeOfHighClouds3\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter TYPE HIGH CLOUD\\\" >\\n                                    <option value=\\\"\\\"></option>\\n                                    <option value=\\\"0\\\">0</option>\\n                                    <option value=\\\"1\\\">1</option>\\n                                    <option value=\\\"2\\\">2</option>\\n                                    <option value=\\\"3\\\">3</option>\\n                                    <option value=\\\"4\\\">4</option>\\n                                    <option value=\\\"5\\\">5</option>\\n                                    <option value=\\\"6\\\">6</option>\\n                                    <option value=\\\"7\\\">7</option>\\n                                    <option value=\\\"8\\\">8</option>\\n                                    <option value=\\\"9\\\">9</option>\\n                                  </select>\\n                                </td>\\n                                <td>\\n                                  <select name=\\\"OktasOfHighClouds3\\\"  [(ngModel)]=\\\"form.OktasOfHighClouds3\\\" onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter OKTAS HIGH CLOUD\\\" >\\n                                  <option value=\\\"\\\"> </option>\\n                                  <option value=\\\"0\\\">0</option>\\n                                  <option value=\\\"1\\\">1</option>\\n                                  <option value=\\\"2\\\">2</option>\\n                                  <option value=\\\"3\\\">3</option>\\n                                  <option value=\\\"4\\\">4</option>\\n                                  <option value=\\\"5\\\">5</option>\\n                                  <option value=\\\"6\\\">6</option>\\n                                  <option value=\\\"7\\\">7</option>\\n                                  <option value=\\\"8\\\">8</option>\\n                                </select>\\n                                </td>\\n                                <td>\\n                                  <input type=\\\"text\\\" name=\\\"HeightOfHighClouds3\\\"   [(ngModel)]=\\\"form.HeightOfHighClouds3\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" 0 \\\" style = \\\"width:70px;\\\">\\n                                </td>\\n                                <td>\\n                                   <select name=\\\"CLCODEOfHighClouds3\\\"   [(ngModel)]=\\\"form.CLCODEOfHighClouds3\\\"  onkeyup=\\\"allowCharactersInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\" Enter CL CODE MEDIUM CLOUD \\\" >\\n                                    <option value=\\\"\\\"></option>\\n                                    <option value=\\\"Cl\\\">Cl</option>\\n                                    <option value=\\\"Cc\\\">Cc</option>\\n                                    <option value=\\\"Cs\\\">Cs</option>\\n                                  </select>\\n                                </td>\\n                              </tr>\\n                              <tr>\\n                                  <td colspan=\\\"6\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                      <span class=\\\"input-group-addon\\\">Cloud Searchlight Alidade Reading</span>\\n                                      <input type=\\\"text\\\" name=\\\"CLCODEOfHighClouds3\\\"  [(ngModel)]=\\\"form.CLCODEOfHighClouds3\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Cloud Searchlight Alidade Reading\\\" >\\n                                    </div>\\n                                  </td>\\n                                  <td colspan=\\\"6\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                    <span class=\\\"input-group-addon\\\">Rainfall(mm)</span>\\n                                    <input type=\\\"text\\\" name=\\\"Rainfall\\\"  [(ngModel)]=\\\"form.Rainfall\\\"    class=\\\"form-control\\\" placeholder=\\\"Enter Rainfall(mm)\\\" >\\n                                  </div>\\n                                  </td>\\n                                </tr>\\n                      </table>\\n\\n                          <!-- Section 2 -->\\n                          <div>\\n                              <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped\\\">\\n                                <tr>\\n                                  <td>\\n                                    <div class=\\\"input-group\\\">\\n                                      <span class=\\\"input-group-addon\\\">Unit of Wind Speed</span>\\n                                      <select  name=\\\"UnitOfWindSpeed\\\"  [(ngModel)]=\\\"form.UnitOfWindSpeed\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter the Unit of Wind Speed\\\" >\\n                                        <option value=\\\"\\\"></option>\\n                                        <option value=\\\"1\\\">1</option>\\n                                        <option value=\\\"2\\\">2</option>\\n                                        <option value=\\\"3\\\">3</option>\\n                                        <option value=\\\"4\\\">4</option>\\n                                        <option value=\\\"5\\\">5</option>\\n                                        <option value=\\\"6\\\">6</option>\\n\\n\\n\\n                                      </select>\\n                                    </div>\\n                                  </td>\\n                                  <td>\\n                                     <div class=\\\"input-group\\\">\\n                                      <span class=\\\"input-group-addon\\\">Ind. or omission of precipitation</span>\\n                                      <select name=\\\"IndOrOmissionOfPrecipitation\\\" [(ngModel)]=\\\"form.IndOrOmissionOfPrecipitation\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter the Ind. or omission of precipitation \\\" >\\n                                        <option value=\\\"\\\"></option>\\n                                        <option value=\\\"1\\\">1</option>\\n                                        <option value=\\\"2\\\">2</option>\\n                                        <option value=\\\"3\\\">3</option>\\n\\n                                      </select>\\n                                    </div>\\n                                  </td>\\n                                </tr>\\n\\n                                <tr>\\n                                  <td>\\n                                    <div class=\\\"input-group\\\">\\n                                      <span class=\\\"input-group-addon\\\">Type of station/present & past weather</span>\\n                                      <select name=\\\"TypeOfStation_Present_Past_Weather\\\"  [(ngModel)]=\\\"form.TypeOfStation_Present_Past_Weather\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter the Type of station/present & past weather\\\" >\\n                                        <option value=\\\"\\\"></option>\\n                                        <option value=\\\"1\\\">1</option>\\n                                        <option value=\\\"2\\\">2</option>\\n                                        <option value=\\\"3\\\">3</option>\\n\\n                                      </select>\\n                                    </div>\\n                                  </td>\\n                                  <td>\\n                                     <div class=\\\"input-group\\\">\\n                                      <span class=\\\"input-group-addon\\\">Height Of Lowest Cloud</span>\\n                                      <select  name=\\\"HeightOfLowestCloud\\\"  [(ngModel)]=\\\"form.HeightOfLowestCloud\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter the Height Of The Lowest Cloud\\\" >\\n                                        <option value=\\\"\\\"></option>\\n\\n                                        <option value=\\\"1\\\">1</option>\\n                                        <option value=\\\"2\\\">2</option>\\n                                        <option value=\\\"3\\\">3</option>\\n                                        <option value=\\\"4\\\">4</option>\\n                                        <option value=\\\"5\\\">5</option>\\n                                        <option value=\\\"6\\\">6</option>\\n                                        <option value=\\\"7\\\">7</option>\\n                                        <option value=\\\"8\\\">8</option>\\n                                        <option value=\\\"9\\\">9</option>\\n                                        <option value=\\\"10\\\">10</option>\\n\\n                                      </select>\\n                                    </div>\\n                                  </td>\\n                                </tr>\\n                                <tr>\\n                                  <td>\\n                                     <div class=\\\"input-group\\\">\\n                                      <span class=\\\"input-group-addon\\\">Standard isobaric surface</span>\\n                                      <input type=\\\"text\\\" name=\\\"StandardIsobaricSurface\\\"  value=\\\"\\\"  [(ngModel)]=\\\"form.StandardIsobaricSurface\\\" onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter the Standard isobaric surface\\\" >\\n                                    </div>\\n                                  </td>\\n                                  <td>\\n\\n                                    <div class=\\\"input-group\\\">\\n                                      <span class=\\\"input-group-addon\\\">Geopotential Of Standard Isobaric Surface</span>\\n                                      <input type=\\\"text\\\"  name=\\\"GPM\\\"  [(ngModel)]=\\\"form.GPM\\\"   value=\\\"\\\" class=\\\"form-control\\\"  placeholder=\\\"Enter the Geopotential Of Standard Isobaric Surface\\\" >\\n                                    </div>\\n                                  </td>\\n                                </tr>\\n                                <tr>\\n                                  <td>\\n                                    <div class=\\\"input-group\\\">\\n                                      <span class=\\\"input-group-addon\\\">Duration Of Period Of Precipitation</span>\\n                                      <input type=\\\"text\\\"  name=\\\"CI_OfPrecipitation\\\"  [(ngModel)]=\\\"form.CI_OfPrecipitation\\\"    value=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Enter the Duration Of Period Of Precipitation\\\" >\\n                                    </div>\\n                                  </td>\\n                                  <td>\\n\\n                                  </td>\\n                                </tr>\\n                              </table>\\n                            </div>\\n\\n                            <!-- Section 3 -->\\n\\n                            <div >\\n                              <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped\\\">\\n                              <tr>\\n                                <td>\\n                                  <div class =\\\"input-group\\\">\\n\\n                                      <span class=\\\"input-group-addon\\\">PRESENT WEATHER CODE</span>\\n                          <input type=\\\"text\\\" name=\\\"Present_WeatherCode\\\"  [(ngModel)]=\\\"form.Present_WeatherCode\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter PRESENT WEATHER CODE\\\" >\\n\\n                                  </div>\\n                                </td>\\n                                <td>\\n                                    <div class=\\\"input-group\\\">\\n                                    <span class=\\\"input-group-addon\\\">PRESENT WEATHER</span>\\n                                    <select name=\\\"Present_Weather\\\"  [(ngModel)]=\\\"form.Present_Weather\\\"    class=\\\"form-control\\\" placeholder=\\\"Enter PRESENT WEATHER\\\" >\\n                                      <option value=\\\"\\\">--Select PRESENT WEATHER </option>\\n                                      <option value=\\\"FG\\\">FG</option>  <!--FOG -->\\n                                      <option value=\\\"HZ\\\">HZ</option>  <!--HAZE -->\\n                                      <option value=\\\"TS\\\">TS</option>  <!--THUNDERSTORM -->\\n                                      <option value=\\\"LL\\\">LL</option>  <!--LIGHTENING -->\\n                                      <option value=\\\"BR\\\">BR</option>  <!--MIST -->\\n                                      <option value=\\\"GR\\\">GR</option>  <!--HAIL -->\\n                                      <option value=\\\"DZ\\\">DZ</option>  <!--DRIZZLE -->\\n                                      <option value=\\\"RA\\\">RA</option>  <!--RAINFALL -->\\n                                    </select>\\n                                    </div>\\n                                  </td>\\n                              </tr>\\n\\n                              <tr>\\n                                  <td>\\n                                    <div class=\\\"input-group\\\">\\n                                     <span class=\\\"input-group-addon\\\">Past Weather</span>\\n                                     <input type=\\\"text\\\" name=\\\"Present_Weather\\\"  [(ngModel)]=\\\"form.Present_Weather\\\"    class=\\\"form-control\\\" placeholder=\\\" Enter Past Weather \\\" >\\n                                   </div>\\n                                  </td>\\n                                  <td>\\n\\n                                  </td>\\n                                </tr>\\n\\n                                <tr>\\n                                    <td>\\n                                      <div class=\\\"input-group\\\">\\n                                      <span class=\\\"input-group-addon\\\">VISIBILITY</span>\\n                                      <input type=\\\"text\\\" name=\\\"Visibility\\\"  [(ngModel)]=\\\"form.Visibility\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter VISIBILITY\\\" >\\n                                    </div>\\n                                    </td>\\n                                    <td>\\n                                     <div class=\\\"input-group\\\">\\n                                      <span class=\\\"input-group-addon\\\">GUSTING(KTS)</span>\\n                                      <input type=\\\"text\\\" name=\\\"Gusting\\\"  [(ngModel)]=\\\"form.Gusting\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter GUSTING (KTS)\\\" >\\n                                    </div>\\n                                    </td>\\n                                  </tr>\\n\\n                                  <tr>\\n                                      <td colspan=\\\"2\\\" align = \\\"center\\\"><b>wind</b></td>\\n                                    </tr>\\n                                    <tr>\\n                                      <td>\\n                                         <div class=\\\"input-group\\\">\\n                                          <span class=\\\"input-group-addon\\\">WIND DIRECTION</span>\\n                                          <input type=\\\"text\\\" name=\\\"Wind_Direction\\\"  [(ngModel)]=\\\"form.Wind_Direction\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"   class=\\\"form-control\\\"  placeholder=\\\"Enter WIND DIRECTION\\\" >\\n                                        </div>\\n                                      </td>\\n                                      <td>\\n                                         <div class=\\\"input-group\\\">\\n                                          <span class=\\\"input-group-addon\\\">WIND SPEED(KTS)</span>\\n                                          <input type=\\\"text\\\" name=\\\"Wind_Speed\\\"  [(ngModel)]=\\\"form.Wind_Speed\\\"    class=\\\"form-control\\\"  placeholder=\\\"Enter WIND SPEED(KTS)\\\" >\\n                                        </div>\\n                                      </td>\\n                                    </tr>\\n                                     <tr id=\\\"hideformetar1\\\" >\\n                                          <td>\\n                                            <div class=\\\"input-group\\\">\\n                                              <span class=\\\"input-group-addon\\\">SUN DURATION</span>\\n                                              <input type=\\\"text\\\" name=\\\"sunduration\\\"  [(ngModel)]=\\\"form.sunduration\\\"    class=\\\"form-control\\\"    placeholder=\\\"Enter the Duration of Sunshine\\\" >\\n                                            </div>\\n                                          </td>\\n                                          <td>\\n                                            <div class=\\\"input-group\\\">\\n                                              <span class=\\\"input-group-addon\\\">WIND RUN</span>\\n                                              <input type=\\\"text\\\" name=\\\"windrun\\\"   [(ngModel)]=\\\"form.windrun\\\"   class=\\\"form-control\\\"  placeholder=\\\" Enter the  WIND RUN\\\" >\\n                                            </div>\\n\\n                                          </td>\\n                                        </tr>\\n                                        <tr><td  colspan=\\\"2\\\" align = \\\"center\\\" ><b>Rainfall & Temperature:</b></td></tr>\\n                                        <tr>\\n                                          <td >\\n                                            <div class=\\\"input-group\\\">\\n                                            <span class=\\\"input-group-addon\\\">Dry Bulb</span>\\n                                            <input type=\\\"text\\\" name=\\\"Dry_Bulb\\\"  [(ngModel)]=\\\"form.Dry_Bulb\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"   class=\\\"form-control\\\"  placeholder=\\\"Enter Dry Bulb\\\" >\\n                                          </div>\\n                                          </td>\\n                                          <td>\\n                                              <div class=\\\"input-group\\\">\\n                                              <span class=\\\"input-group-addon\\\">Wet Bulb</span>\\n                                              <input type=\\\"text\\\" name=\\\"Wet_Bulb\\\"  [(ngModel)]=\\\"form.Wet_Bulb\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter Wet Bulb\\\" >\\n                                            </div>\\n                                            </td>\\n                                        </tr>\\n\\n                              </table>\\n                            </div>\\n\\n                          <!-- Section 4 -->\\n\\n                          <div >\\n                              <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped\\\">\\n                                <tr>\\n                                  <td>\\n                                      <div class=\\\"input-group\\\">\\n                                          <span class=\\\"input-group-addon\\\">Attd.Thermo.(C)</span>\\n                                          <input type=\\\"text\\\" name=\\\"AttdThermo\\\"  [(ngModel)]=\\\"form.AttdThermo\\\" onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter ATTD.THERMO.\\\" >\\n                                        </div> <br>\\n\\n                                        <div class=\\\"input-group\\\">\\n                                          <span class=\\\"input-group-addon\\\">Pr.As Read(C)</span>\\n                                          <input type=\\\"text\\\" name=\\\"PrAsRead\\\"  [(ngModel)]=\\\"form.PrAsRead\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Pr.As Read\\\" >\\n                                        </div>\\n                                  </td>\\n                                  <td>\\n                                      <div class=\\\"input-group\\\">\\n                                        <span class=\\\"input-group-addon\\\">Correction</span>\\n                                        <input type=\\\"text\\\" name=\\\"Correction\\\"  [(ngModel)]=\\\"form.Correction\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Correction\\\" >\\n                                      </div> <br>\\n\\n                                      <div class=\\\"input-group\\\">\\n                                        <span class=\\\"input-group-addon\\\">C.L.P(mb)</span>\\n                                        <input type=\\\"text\\\" name=\\\"CLP\\\" [(ngModel)]=\\\"form.CLP\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter C.L.P(mb)\\\" >\\n                                      </div>\\n                                    </td>\\n                                </tr>\\n                                <tr>\\n                                    <td>\\n                                    <div class=\\\"input-group\\\">\\n                                    <span class=\\\"input-group-addon\\\">MIN TEMPERATURE(degrees celsius)</span>\\n\\n                                        <input id=\\\"inputCelsius\\\" name=\\\"Min_Read\\\" [(ngModel)]=\\\"form.Min_Read\\\" type=\\\"number\\\" value=\\\"\\\" onkeyup=\\\"allowIntegerInputOnly(this)\\\"    class=\\\"form-control\\\"  placeholder=\\\"Enter min temperature\\\" oninput=\\\"temperatureConverter(this.value)\\\" onchange=\\\"temperatureConverter(this.value)\\\">\\n                                     </div>\\n                                    </td>\\n                                    <td>\\n                                    <div class=\\\"input-group\\\">\\n                                    <span class=\\\"input-group-addon\\\">MIN TEMPERATURE(degrees Fahrenheit)</span>\\n                                      <input id=\\\"Piche_Read\\\" name=\\\"Piche_Read\\\" [(ngModel)]=\\\"form.Min_Read\\\"  disabled onkeyup=\\\"allowIntegerInputOnly(this)\\\" class=\\\"form-control\\\"  value=\\\"\\\"  placeholder=\\\"Enter min temperature\\\" >\\n\\n                                     </div>\\n                                    </td>\\n\\n                                    </tr>\\n                                    <tr>\\n                                    <td>\\n                                      <br>\\n                                    <div class=\\\"input-group\\\">\\n                                        <span class=\\\"input-group-addon\\\">MAX TEMPERATURE(degrees celicious)</span>\\n                                          <input type=\\\"text\\\" name=\\\"Max_Read\\\" [(ngModel)]=\\\"form.Max_Read\\\"   onkeyup=\\\"allowIntegerInputOnly(this)\\\"   [(ngModel)]=\\\"form.TotalAmountOfLowClouds\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter max temperature\\\" >\\n                                    </div>\\n\\n                                            </td>\\n                                            <td>\\n                                              <br>\\n\\n                                              <div class=\\\"input-group\\\">\\n                                                <span class=\\\"input-group-addon\\\">M.S.L.Pr(mb) or 850mb. Ht.(gpm)</span>\\n                                                <input type=\\\"text\\\" name=\\\"MSLPr\\\" [(ngModel)]=\\\"form.MSLPr\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter M.S.L.Pr(mb) or 850mb. Ht.(gpm)\\\" >\\n                                              </div>\\n                                            </td>\\n                                          </tr>\\n                                          <tr>\\n                                              <td colspan=\\\"2\\\" align = \\\"center\\\">Time marks</td>\\n                                            </tr>\\n\\n                                            <tr>\\n                                              <td>\\n                                                 <div class=\\\"input-group\\\">\\n                                                  <span class=\\\"input-group-addon\\\">TIME MARKS BAROGRAPH</span>\\n                                                  <input type=\\\"text\\\" name=\\\"TimeMarksBarograph\\\"  [(ngModel)]=\\\"form.TimeMarksBarograph\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter TIME MARKS BAROGRAPH\\\" >\\n                                                </div>\\n                                              </td>\\n                                              <td>\\n                                                 <div class=\\\"input-group\\\">\\n                                                  <span class=\\\"input-group-addon\\\">TIME MARKS ANEMOGRAPH</span>\\n                                                  <input type=\\\"text\\\" name=\\\"TimeMarksAnemograph\\\"  [(ngModel)]=\\\"form.TotalAmountOfLowClouds\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter TIME MARKS ANEMOGRAPH\\\" >\\n                                                </div>\\n                                              </td>\\n                                            </tr>\\n                                            <tr>\\n                                                <td>\\n                                                  <div class=\\\"input-group\\\">\\n                                                    <span class=\\\"input-group-addon\\\">Other T/MARKS </span>\\n                                                    <input type=\\\"text\\\" name=\\\"OtherTMarks\\\"  [(ngModel)]=\\\"form.OtherTMarks\\\"  onkeyup=\\\"allowCharactersInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Other T/MARKS\\\" >\\n                                                  </div>\\n                                                </td>\\n                                                <td>\\n                                                   <div class=\\\"input-group\\\">\\n                                                    <span class=\\\"input-group-addon\\\">Remarks or any other Observations </span>\\n                                                    <input type=\\\"text\\\" name=\\\"Remarks\\\"  [(ngModel)]=\\\"form.Remarks\\\"  onkeyup=\\\"allowCharactersInputOnly(this)\\\"  class=\\\"form-control\\\" placeholder=\\\"Enter Remarks or any other Observations\\\" >\\n                                                  </div>\\n                                                </td>\\n                                              </tr>\\n\\n                              </table>\\n                          </div>\\n\\n                          <!-- Section 5 -->\\n                          <div>\\n                              <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped\\\">\\n                                <tr>\\n                                  <td>\\n                                    <div class=\\\"input-group\\\">\\n                                        <span class=\\\"input-group-addon\\\">Unit of Wind Speed</span>\\n                                        <select name=\\\"UnitOfWindSpeed\\\"  [(ngModel)]=\\\"form.UnitOfWindSpeed\\\" onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter the Unit of Wind Speed\\\" >\\n                                          <option value=\\\"\\\">--Select Unit Of Wind Speed </option>\\n\\n                                          <option value=\\\"1\\\">1</option>\\n                                          <option value=\\\"2\\\">2</option>\\n                                          <option value=\\\"3\\\">3</option>\\n                                          <option value=\\\"4\\\">4</option>\\n                                          <option value=\\\"5\\\">5</option>\\n                                          <option value=\\\"6\\\">6</option>\\n\\n\\n\\n                                        </select>\\n                                    </div>\\n                                  </td>\\n                                  <td>\\n                                      <div class=\\\"input-group\\\">\\n                                       <span class=\\\"input-group-addon\\\">Ind. or omission of precipitation</span>\\n                                       <select name=\\\"IndOrOmissionOfPrecipitation\\\"  [(ngModel)]=\\\"form.IndOrOmissionOfPrecipitation\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter the Ind. or omission of precipitation \\\" >\\n                                         <option value=\\\"\\\">--Select Ind. or omission of precipitation </option>\\n\\n                                         <option value=\\\"1\\\">1</option>\\n                                         <option value=\\\"2\\\">2</option>\\n                                         <option value=\\\"3\\\">3</option>\\n\\n                                       </select>\\n                                     </div>\\n                                   </td>\\n                                </tr>\\n                                <tr>\\n                               <td>\\n                                   <div class=\\\"input-group\\\">\\n                                    <span class=\\\"input-group-addon\\\">Height Of Lowest Cloud</span>\\n                                    <select name=\\\"HeightOfLowestCloud\\\"  [(ngModel)]=\\\"form.HeightOfLowestCloud\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter the Height Of The Lowest Cloud\\\" >\\n                                      <option value=\\\"\\\">--Select Height Of Lowest Cloud </option>\\n\\n                                      <option value=\\\"1\\\">1</option>\\n                                      <option value=\\\"2\\\">2</option>\\n                                      <option value=\\\"3\\\">3</option>\\n                                      <option value=\\\"4\\\">4</option>\\n                                      <option value=\\\"5\\\">5</option>\\n                                      <option value=\\\"6\\\">6</option>\\n                                      <option value=\\\"7\\\">7</option>\\n                                      <option value=\\\"8\\\">8</option>\\n                                      <option value=\\\"9\\\">9</option>\\n                                      <option value=\\\"10\\\">10</option>\\n\\n                                    </select>\\n                                  </div>\\n                                </td>\\n                                </tr>\\n                                 <tr>\\n                                    <td>\\n                                       <div class=\\\"input-group\\\">\\n                                        <span class=\\\"input-group-addon\\\">Standard isobaric surface</span>\\n                                        <input type=\\\"text\\\" name=\\\"StandardIsobaricSurface\\\"  [(ngModel)]=\\\"form.StandardIsobaricSurface\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"  placeholder=\\\"Enter the Standard isobaric surface\\\" >\\n                                      </div>\\n                                    </td>\\n                                    <td>\\n\\n                                      <div class=\\\"input-group\\\">\\n                                        <span class=\\\"input-group-addon\\\">Geopotential Of Standard Isobaric Surface</span>\\n                                        <input type=\\\"text\\\" name=\\\"GPM\\\"  [(ngModel)]=\\\"form.GPM\\\"   class=\\\"form-control\\\"  placeholder=\\\"Enter the Geopotential Of Standard Isobaric Surface\\\" >\\n                                      </div>\\n                                    </td>\\n                                  </tr>\\n                                  <tr>\\n                                      <td>\\n                                        <div class=\\\"input-group\\\">\\n                                          <span class=\\\"input-group-addon\\\">Duration Of Period Of Precipitation</span>\\n                                          <input type=\\\"text\\\" name=\\\"DurationOfPeriodOfPrecipitation\\\"  [(ngModel)]=\\\"form.DurationOfPeriodOfPrecipitation\\\"   class=\\\"form-control\\\" placeholder=\\\"Enter the Duration Of Period Of Precipitation\\\" >\\n                                        </div>\\n                                      </td>\\n                                      <td>\\n\\n                                      </td>\\n                                    </tr>\\n\\n                              </table>\\n                          </div>\\n\\n                          <!-- Section 6 -->\\n                          <div>\\n                              <table id=\\\"example1\\\" class=\\\"table table-bordered table-striped\\\">\\n                                  <tr>\\n                                      <td>\\n                                        <div class=\\\"input-group\\\">\\n                                        <span class=\\\"input-group-addon\\\">Grass Mininum temperature</span>\\n                                        <input type=\\\"text\\\"  name=\\\"GrassMinTemp\\\"  [(ngModel)]=\\\"form.GrassMinTemp\\\"  value=\\\"\\\"  class=\\\"form-control\\\" placeholder=\\\" Enter Grass Mininum temperature \\\" >\\n                                      </div>\\n                                      </td>\\n                                      <td>\\n                                        <div class=\\\"input-group\\\">\\n                                          <span class=\\\"input-group-addon\\\">Character and Intensity of Precipitation</span>\\n                                          <input type=\\\"text\\\"  name=\\\"CI_OfPrecipitation\\\"  [(ngModel)]=\\\"form.CI_OfPrecipitation\\\"   value=\\\"\\\"  class=\\\"form-control\\\"  placeholder=\\\" Enter Character and Intensity of Precipitation\\\" >\\n                                        </div>\\n                                      </td>\\n                                    </tr>\\n                                    <tr>\\n                                        <td>\\n                                          <div class=\\\"input-group\\\">\\n                                            <span class=\\\"input-group-addon\\\">Beginning or End of Precipitation</span>\\n                                            <input type=\\\"text\\\"  name=\\\"BE_OfPrecipitation\\\" value=\\\"\\\"  [(ngModel)]=\\\"form.BE_OfPrecipitation\\\"     class=\\\"form-control\\\"    placeholder=\\\"Enter Beginning or End of Precipitation\\\" >\\n                                          </div>\\n                                        </td>\\n                                        <td>\\n                                           <div class=\\\"input-group\\\">\\n                                            <span class=\\\"input-group-addon\\\">Indicator of type of intrumentation</span>\\n                                            <input type=\\\"text\\\"  name=\\\"IndicatorOfTypeOfIntrumentation\\\"   [(ngModel)]=\\\"form.IndicatorOfTypeOfIntrumentation\\\"    class=\\\"form-control\\\"    placeholder=\\\"Enter the Indicator of type of intrumentation\\\" >\\n                                          </div>\\n                                        </td>\\n                                      </tr>\\n                                      <tr>\\n                                          <td>\\n                                           <div class=\\\"input-group\\\">\\n                                            <span class=\\\"input-group-addon\\\">Sign of Pressure Change</span>\\n                                            <input type=\\\"text\\\"  name=\\\"SignOfPressureChange\\\"   [(ngModel)]=\\\"form.SignOfPressureChange\\\"    class=\\\"form-control\\\"    placeholder=\\\"Enter the Sign of Pressure Change\\\" >\\n                                          </div>\\n                                        </td>\\n                                        <td>\\n                                          <div class=\\\"input-group\\\">\\n                                            <span class=\\\"input-group-addon\\\">Supplementary Information</span>\\n                                            <input type=\\\"text\\\"  name=\\\"Supp_Info\\\"   [(ngModel)]=\\\"form.Supp_Info\\\"  onkeyup=\\\"allowCharactersInputOnly(this)\\\"  class=\\\"form-control\\\"   placeholder=\\\"Enter Supplementary Information\\\" >\\n                                          </div>\\n                                        </td>\\n                                      </tr>\\n                                      <tr>\\n                                          <td>\\n                                            <div class=\\\"input-group\\\">\\n                                              <span class=\\\"input-group-addon\\\">Vapour Pressure</span>\\n                                              <input type=\\\"text\\\" name=\\\"VapourPressure\\\" value=\\\"\\\"   [(ngModel)]=\\\"form.VapourPressure\\\"  onkeyup=\\\"allowIntegerInputOnly(this)\\\"  class=\\\"form-control\\\"   placeholder=\\\"Enter the Vapour Pressure\\\" >\\n                                            </div>\\n                                          </td>\\n                                          <td>\\n                                            <div class=\\\"input-group\\\">\\n                                              <span class=\\\"input-group-addon\\\">TH GRAPH</span>\\n                                              <input type=\\\"text\\\"  name=\\\"T_H_Graph\\\" value=\\\"\\\"   [(ngModel)]=\\\"form.T_H_Graph\\\"    class=\\\"form-control\\\"  placeholder=\\\" Enter TH GRAPH\\\" >\\n                                            </div>\\n                                          </td>\\n                                        </tr>\\n                                        <tr>\\n                                          <td colspan = \\\"1\\\">\\n                                              <span class=\\\"input-group-addon\\\">TREND</span>\\n                                              <textarea  name=\\\"trend\\\" value=\\\"\\\"  class=\\\"form-control\\\" style=\\\"height:40px;\\\"  [(ngModel)]=\\\"form.trend\\\"  onkeyup=\\\"\\\"></textarea>\\n                                          </td>\\n                                          <td>\\n                                            <div>\\n                                                <span class=\\\"input-group-addon\\\">Approved</span>\\n                                                <select name=\\\"Approved\\\"  [(ngModel)]=\\\"form.Approved\\\"  disabled  class=\\\"form-control\\\" >\\n                                                    <option value=\\\"\\\"></option>\\n                                                    <option value=\\\"TRUE\\\">TRUE</option>\\n                                                    <option value=\\\"FALSE\\\">FALSE</option>\\n                                                  </select>\\n                                                  <input type=\\\"hidden\\\" name=\\\"Approved\\\"  [(ngModel)]=\\\"form.Approved\\\" >\\n                                                  <select>\\n                                                      <option value=\\\"\\\"></option>\\n                                                      <option value=\\\"TRUE\\\">TRUE</option>\\n                                                      <option value=\\\"FALSE\\\">FALSE</option>\\n                                                  </select>\\n                                            </div>\\n                                          </td>\\n                                        </tr>\\n                              </table>\\n                            </div>\\n                            <button class=\\\"btn btn-success\\\">Submit Observationslip</button>\\n                            <div *ngIf=\\\"f.submitted && failedToSubmit\\\" class=\\\"alert alert-warning\\\">\\n                              Storing data failed!<br/>{{errorMessage}}\\n                            </div>\\n                 </form>\\n            </div>\\n            </section>\\n        </aside>\\n      </ng-template>\\n\\n\"","import { Component, OnInit} from '@angular/core';\nimport { FormBuilder} from '@angular/forms';\nimport {  Router } from '@angular/router';\nimport { ObservationslipInfo } from '../auth/observationslip-info';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-observationslipform',\n  templateUrl: './observationslipform.component.html',\n  styleUrls: ['./observationslipform.component.css']\n})\n\nexport class ObservationslipformComponent implements OnInit {\n  form: any = {};\n  observatioslip: ObservationslipInfo;\n  submitted = false;\n  failedToSubmit = false;\n  errorMessage = '';\n\n  \nconstructor(\n  private formBuilder: FormBuilder,\n  private router: Router,\n  private authService: AuthService) { }\n\n\n  ngOnInit() {}\n\n  onSubmit() {\n    console.log(this.form);\n    this.observatioslip = new ObservationslipInfo(\n            this.form.Time,\n            this.form.Date,\n            this.form.Station,\n            this.form.stationName,\n            this.form.TotalAmountOfAllClouds,\n            this.form.TotalAmountOfLowClouds,\n            this.form.TypeOfLowClouds1,\n            this.form.OktasOfLowClouds1,\n            this.form.HeightOfLowClouds1,\n            this.form.CLCODEOfLowClouds1,\n            this.form.TypeOfLowClouds2,\n            this.form.OktasOfLowClouds2,\n            this.form.HeightOfLowClouds2,\n            this.form.CLCODEOfLowClouds2,\n            this.form.TypeOfLowClouds3,\n            this.form.OktasOfLowClouds3,\n            this.form.HeightOfLowClouds3,\n            this.form.CLCODEOfLowClouds3,\n            this.form.TypeOfMediumClouds1,\n            this.form.OktasOfMediumClouds1,\n            this.form.HeightOfMediumClouds1,\n            this.form.CLCODEOfMediumClouds1,\n            this.form.TypeOfMediumClouds2,\n            this.form.OktasOfMediumClouds2,\n            this.form.HeightOfMediumClouds2,\n            this.form.CLCODEOfMediumClouds2,\n            this.form.TypeOfMediumClouds3,\n            this.form.OktasOfMediumClouds3,\n            this.form.HeightOfMediumClouds3,\n            this.form.CLCODEOfMediumClouds3,\n            this.form.TypeOfHighClouds1,\n            this.form.OktasOfHighClouds1,\n            this.form.HeightOfHighClouds1,\n            this.form.CLCODEOfHighClouds1,\n            this.form.TypeOfHighClouds2,\n            this.form.OktasOfHighClouds2,\n            this.form.HeightOfHighClouds2,\n            this.form.CLCODEOfHighClouds2,\n            this.form.TypeOfHighClouds3,\n            this.form.OktasOfHighClouds3,\n            this.form.HeightOfHighClouds3,\n            this.form.CLCODEOfHighClouds3,\n            this.form.CloudSearchLightReading,\n            this.form.Rainfall,\n            this.form.Dry_Bulb,\n            this.form.Wet_Bulb,\n            this.form.Max_Read,\n            this.form.Max_Reset,\n            this.form.Min_Read,\n            this.form.Min_Reset,\n            this.form.Piche_Read,\n            this.form.Piche_Reset,\n            this.form.TimeMarksThermo,\n            this.form.TimeMarksHygro,\n            this.form.TimeMarksRainRec,\n            this.form.Present_Weather,\n            this.form.Present_WeatherCode,\n            this.form.Past_Weather,\n            this.form.Visibility,\n            this.form.Wind_Direction,\n            this.form.Wind_Speed,\n            this.form.Gusting,\n            this.form.AttdThermo,\n            this.form.PrAsRead,\n            this.form.Correction,\n            this.form.CLP,\n            this.form.MSLPr,\n            this.form.TimeMarksBarograph,\n            this.form.TimeMarksAnemograph,\n            this.form.OtherTMarks,\n            this.form.SoilMoisture,\n            this.form.SoilTemperature,\n            this.form.sunduration,\n            this.form.trend,\n            this.form.windrun,\n            this.form.speciOrMetar,\n            this.form.UnitOfWindSpeed,\n            this.form.IndOrOmissionOfPrecipitation,\n            this.form.TypeOfStation_Present_Past_Weather,\n            this.form.HeightOfLowestCloud,\n            this.form.StandardIsobaricSurface,\n            this.form.GPM,\n            this.form.DurationOfPeriodOfPrecipitation,\n            this.form.GrassMinTemp,\n            this.form.CI_OfPrecipitation,\n            this.form.BE_OfPrecipitation,\n            this.form.IndicatorOfTypeOfIntrumentation,\n            this.form.SignOfPressureChange,\n            this.form.Supp_Info,\n            this.form.VapourPressure,\n            this.form.T_H_Graph,\n            this.form.DeviceType,\n            this.form.SubmittedBy,\n            this.form.Remarks,\n            this.form.Approved\n    );\n\n    this.authService.storeObservationslip(this.observatioslip).subscribe(\n      data => {\n        console.log(data);\n        this.submitted = true;\n        this.failedToSubmit = false;\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error;\n        this.failedToSubmit = true;\n      }\n    );\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BtL3BtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h4>Content from Server</h4>\\n<div *ngIf=\\\"userInfo\\\">\\n    <p>Name: <strong>{{userInfo.name}}</strong></p>\\n    <p>Email: <strong>{{userInfo.email}}</strong></p>\\n</div>\\n{{board}}\\n{{errorMessage}}\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-pm',\n  templateUrl: './pm.component.html',\n  styleUrls: ['./pm.component.css']\n})\nexport class PmComponent implements OnInit {\n  userInfo: any;\n  board: string;\n  errorMessage: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getPMBoard().subscribe(\n      data => {\n        this.userInfo = {\n          name: data.user.name,\n          email: data.user.email\n        };\n        this.board = data.description;\n      },\n      error => {\n        this.errorMessage = `${error.status}: ${error.error}`;\n      }\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"isSignedUp; else signupForm\\\">\\n  Your registration is successful. Please login!\\n</div>\\n\\n<ng-template #signupForm>\\n  <div class=\\\"row col-sm-6\\\" style=\\\"max-width:350px;\\\">\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Your name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.name\\\" #name=\\\"ngModel\\\" required />\\n        <div *ngIf=\\\"f.submitted && name.invalid\\\">\\n          <div *ngIf=\\\"name.errors.required\\\">Name is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" #username=\\\"ngModel\\\"\\n          required />\\n        <div *ngIf=\\\"f.submitted && username.invalid\\\">\\n          <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.email\\\" #email=\\\"ngModel\\\" required email />\\n        <div *ngIf=\\\"f.submitted && email.invalid\\\">\\n          <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n          <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" #password=\\\"ngModel\\\"\\n          required minlength=\\\"6\\\" />\\n        <div *ngIf=\\\"f.submitted && password.invalid\\\">\\n          <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n          <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">User Role</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"roles[]\\\" [(ngModel)]=\\\"form.roles\\\" #roles=\\\"ngModel\\\" required />\\n        <div *ngIf=\\\"f.submitted && roles.invalid\\\">\\n          <div *ngIf=\\\"roles.errors.required\\\">User role is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\">Register</button>\\n        <div *ngIf=\\\"f.submitted && isSignUpFailed\\\" class=\\\"alert alert-warning\\\">\\n          Signup failed!<br/>{{errorMessage}}\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../auth/auth.service';\nimport { SignUpInfo } from '../auth/signup-info';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: any = {};\n  signupInfo: SignUpInfo;\n  isSignedUp = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() { }\n\n  onSubmit() {\n    console.log(this.form);\n\n    this.signupInfo = new SignUpInfo(\n      this.form.name,\n      this.form.username,\n      this.form.email,\n      this.form.password,\n      this.form.roles\n    );\n\n    this.authService.signUp(this.signupInfo).subscribe(\n      data => {\n        console.log(data);\n        this.isSignedUp = true;\n        this.isSignUpFailed = false;\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private userUrl = 'http://localhost:8080/api/test/user';\n  private pmUrl = 'http://localhost:8080/api/test/pm';\n  private adminUrl = 'http://localhost:8080/api/test/admin';\n\n  constructor(private http: HttpClient) { }\n\n  getUserBoard(): Observable<any> {\n    return this.http.get(this.userUrl);\n  }\n\n  getPMBoard(): Observable<any> {\n    return this.http.get(this.pmUrl);\n  }\n\n  getAdminBoard(): Observable<any> {\n    return this.http.get(this.adminUrl);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h4>Content from Server</h4>\\n<div *ngIf=\\\"userInfo\\\">\\n    <p>Name: <strong>{{userInfo.name}}</strong></p>\\n    <p>Email: <strong>{{userInfo.email}}</strong></p>\\n</div>\\n{{board}}\\n{{errorMessage}}\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\n// import { resolveSoa } from 'dns';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  userInfo: any;\n  board: string;\n  errorMessage: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUserBoard().subscribe(\n      data => {\n        this.userInfo = {\n          name: data.user.name,\n          email: data.user.email\n        };\n        this.board = data.description;\n      },\n      error => {\n        this.errorMessage = `${error.status}: ${error.error}`;\n      }\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}